% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/novelist_cv.R
\name{novelist_cv_cpp}
\alias{novelist_cv_cpp}
\title{Rolling Cross-Validation for NOVELIST Threshold Selection (C++ accelerated)}
\usage{
novelist_cv_cpp(
  y,
  y_hat,
  S,
  window_size,
  deltas = seq(0, 1, by = 0.05),
  zero_mean = TRUE,
  error_metric = function(actual, fc) mean((actual - fc)^2, na.rm = TRUE),
  ensure_PD = TRUE
)
}
\arguments{
\item{y}{A matrix of actual values (dim T by p),}

\item{y_hat}{A matrix of fitted values (dim T by p).}

\item{S}{A matrix of reconciliation structure (dim p by b; b is number of bottom series).}

\item{window_size}{The length of the rolling window n.}

\item{deltas}{A numeric vector of candidate threshold values in [0,1].}

\item{zero_mean}{Logical, whether to treat the residuals as zero mean in the covariance.}

\item{error_metric}{An error measure function for given actual and reconciled forecasts.}

\item{ensure_PD}{Logical, whether to ensure the covariance matrix is positive definite.}
}
\value{
A list containing:
  \item{delta}{optimal threshold}
  \item{lambda}{optimal shrinkage intensity}
  \item{cov.novelist}{optimal NOVELIST covariance matrix}
  \item{errors_by_delta}{vector of average validation error for each delta}
}
\description{
This function uses Rcpp to speed up the rolling window computation of
NOVELIST covariance matrices across a grid of threshold values. It avoids
calling nearPD or doing any matrix inversion inside C++.
}
